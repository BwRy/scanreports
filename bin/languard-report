#!/usr/bin/env python
#
# Show results from GFI Languard XML reports
#

import os,sys,logging

from scanreports.script import prepare,initialize,error
from scanreports import ReportParserError
from scanreports.gfi import GFILanguardSummary
from scanreports.reports import ScanReport,CSVReport,HTMLReport,ExcelReport

parser = prepare(sys.argv)
parser.set_usage("""%s [options] <gfi-xml-reports>

Parses GFI Languard report files given on command line and shows a summary of 
the findings, merged to one list instead of each report separately.""" % 
    os.path.basename(sys.argv[0])
)
parser.set_defaults(**{'title': 'Installed Applications Summary'})
parser.add_option('-x','--output-xls',help='Write output to XLS file')
parser.add_option('-o','--output-html',help='Write output to HTML file')
parser.add_option('-O','--output-csv',help='Write output to CSV file')
parser.add_option('-t','--title',help='Report title')
parser.add_option('-q','--quiet',dest='quiet',action='store_true',help='Show minimal info')
(opts,args) = initialize(parser)
log = logging.getLogger('console')

reload(sys)
sys.setdefaultencoding('utf-8')

if len(args)==0:
    sys.exit(error(parser.get_usage()))

outputs = []
if opts.output_html:
    outputs.append(HTMLReport(opts.output_html))
if opts.output_csv:
    outputs.append(CSVReport(opts.output_csv))
if opts.output_xls:
    r = ExcelReport(opts.output_xls)
    # Extend column 1 to 6x normal size
    r.widths[1] = 6
    outputs.append(r)
if len(outputs)==0:
    outputs.append(ScanReport())

for out in outputs:
    out.reportformat = 'GFI Languard'
    out.topic = opts.title

gfi = GFILanguardSummary()
for f in args:
    if not os.path.isfile(f):
        sys.exit(error('%s\n'%'No such file: %s' % f))
    try:
        gfi.read(f)
    except ReportParserError,e:
        log.info('%s\n'%e)
        continue

noapps = sorted(gfi.noapps,lambda x,y: cmp(x.address,y.address))

try:
    for name in sorted(gfi.keys()):
        app = gfi[name]['app']
        apphosts = sorted(gfi[name]['hosts'],lambda x,y: cmp(x.address,y.address))
        for out in outputs:
            out.header('Application',name)
            out.row(
                severity=None,
                label='Hosts',
                fields=[', '.join([host.address.ipaddress for host in apphosts])]
            )
   
    for out in outputs:
        out.write()

except (IOError,KeyboardInterrupt):
    sys.exit(0)

